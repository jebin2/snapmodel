/* Add this line inside the .grid-container rule */
.grid-container {
    /* display: grid; */ /* Remove or comment out */
    /* grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); */ /* Remove */
    /* gap: 1.5rem; */ /* Remove - Masonry uses 'gutter' option */
    /* align-items: start; */ /* Remove */
    padding: 2rem 1.5rem; /* Keep padding */
    position: relative; /* Needed for absolute positioning of items */
    max-width: 100%; /* Ensure it doesn't overflow weirdly */
    margin: 0 auto; /* Center if needed */

    /* --- Add/Modify these lines --- */
    max-width: 90w; /* Or your preferred max width */
    margin-left: auto;
    margin-right: auto;
    /* --- End of additions/modifications --- */

    padding: 2rem 1.5rem; /* Keep padding */
    position: relative; /* Keep */
	display: block; /* Ensure it's block for margin:auto and Masonry */
    /* If you changed display to block, keep it, otherwise remove display property */
    /* display: block; */
}

/* Keep the rest of your styles as they are */
:root {
    /* Color Palette */
    --primary: #007bff; /* Bright Blue */
    --secondary: #6c757d; /* Medium Gray */
    --success: #28a745; /* Green */
    --danger: #dc3545; /* Red */
    --warning: #ffc107; /* Yellow */
    --info: #17a2b8; /* Teal */
    --light: #f8f9fa; /* Very Light Gray */
    --dark: #343a40; /* Dark Gray */
    --white: #ffffff;
    --border-color: #dee2e6;
    --text-muted: #6c757d;
    --accent-1: #6f42c1; /* Purple */
    --accent-2: #fd7e14; /* Orange */
    --accent-3: #20c997; /* Teal Green */

    --transition: all 0.3s ease;
    --border-radius-lg: 16px; /* More pronounced rounding */
    --border-radius-md: 8px;
    --border-radius-sm: 4px;
    --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.08);
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

body {
	background-color: var(--light);
	color: var(--dark);
	line-height: 1.6;
	overflow-x: hidden;
}

.search-container {
	background: var(--white);
	padding: 1.5rem 1rem;
	position: sticky;
	top: 0;
	z-index: 100;
	border-bottom: 1px solid var(--border-color);
	box-shadow: var(--shadow-sm);
}

.search-box {
	display: flex;
	max-width: 700px;
	margin: 0 auto;
	background: var(--light);
	border-radius: 50px;
	overflow: hidden;
	padding: 0.3rem;
	border: 1px solid var(--border-color);
}

.search-box input {
	flex: 1;
	padding: 0.75rem 1.25rem;
	border: none;
	outline: none;
	font-size: 1rem;
	background: transparent;
	color: var(--dark);
}

.search-box input::placeholder {
	color: var(--text-muted);
}

.search-box button {
	background: var(--primary);
	color: white;
	border: none;
	padding: 0 2rem;
	cursor: pointer;
	border-radius: 50px;
	font-weight: 600;
	transition: var(--transition);
	font-size: 0.95rem;
	letter-spacing: 0.5px;
}

.search-box button:hover {
	background: #0056b3;
}

.search-box button i {
	margin-right: 0.5rem;
}

.grid-item {
    /* Ensure items have a width basis for Masonry calculation if needed */
    /* Example: if minmax was 300px, maybe set a width or rely on columnWidth */
     
    /* OR let Masonry's columnWidth handle it */
    margin-bottom: 1.5rem; /* Add margin for vertical spacing instead of gap */
    box-sizing: border-box; /* Crucial for width calculation */

    /* Keep other grid-item styles: */
    background: var(--white);
    
    overflow: hidden;
    display: flex;
    flex-direction: column;
    padding: 1.75rem;
    color: var(--dark);
    transition: var(--transition);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-md);
    border: 1px solid var(--border-color);
    /* Remove grid-column/row spans if they were used */
}

.grid-item:hover {
	transform: translateY(-4px);
	box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.grid-item.hero {
	grid-column: span 2;
	grid-row: span 2;
    min-height: 420px;
	background: linear-gradient(135deg, #e0f7fa 0%, #f8eafa 100%);
	display: flex;
	flex-direction: row;
    align-items: center;
	padding: 2rem;
	border: none;
}

.hero .content {
	flex: 1;
	padding-right: 1rem;
	z-index: 2;
    align-self: stretch; /* Hero content can still stretch vertically if needed */
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.hero .content p {
	margin-bottom: 1.5rem;
}

.hero .model-image-container {
	flex-shrink: 0;
	width: 45%;
	max-width: 300px;
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100%;
}

.model-image {
	position: relative;
	max-width: 100%;
	max-height: 80%;
	object-fit: contain;
	z-index: 1;
	display: block;
	margin: auto;
	border-radius: var(--border-radius-md);
}

.gradient-overlay {
	display: none;
}

.grid-item.full-width {
	grid-column: 1 / -1;
}

.detail-value {
	font-size: 2.2rem;
	font-weight: 700;
	margin-bottom: 0.25rem;
	color: var(--primary);
}

.grid-item:nth-child(3n+2) .detail-value {
	color: var(--accent-1);
}

.grid-item:nth-child(3n+3) .detail-value {
	color: var(--accent-2);
}

.grid-item:nth-child(3n+4) .detail-value {
	color: var(--accent-3);
}

.detail-label {
	font-size: 0.9rem;
	font-weight: 600;
	color: var(--text-muted);
	text-transform: uppercase;
	letter-spacing: 0.5px;
	margin-bottom: 0.75rem;
    /* Ensure label doesn't push value down too much if content above shrinks */
    display: block;
}

.sub-detail {
	font-size: 0.85rem;
	color: var(--text-muted);
	margin-top: 0.15rem;
}

.description-text {
	font-size: 0.95rem;
	color: var(--dark);
	line-height: 1.7;
}

.description-text ul {
	list-style-position: outside;
	padding-left: 1.2rem;
	margin-top: 0.5rem;
}

.description-text li {
	margin-bottom: 0.3rem;
}

.badge {
	display: inline-block;
	padding: 0.35rem 0.85rem;
	border-radius: 50px;
	font-size: 0.8rem;
	font-weight: 500;
	margin-right: 0.5rem;
	margin-bottom: 0.5rem;
	background-color: var(--light);
	color: var(--dark);
	border: 1px solid var(--border-color);
	transition: var(--transition);
}

.badge:hover {
	transform: scale(1.05);
}

.badge-primary {
	background-color: var(--primary);
	color: var(--white);
	border-color: var(--primary);
}

.badge-success {
	background-color: #d4edda;
	color: #155724;
	border-color: #c3e6cb;
}

.badge-info {
	background-color: #d1ecf1;
	color: #0c5460;
	border-color: #bee5eb;
}

.badge-warning {
	background-color: #fff3cd;
	color: #856404;
	border-color: #ffeeba;
}

.badge-danger {
	background-color: #f8d7da;
	color: #721c24;
	border-color: #f5c6cb;
}

.badge-container {
	display: flex;
	flex-wrap: wrap;
	margin-top: 1rem;
}

.content {
	position: relative;
	z-index: 2;
	height: 100%;
	display: flex;
	flex-direction: column;
    flex-grow: 1; /* Allow content to grow if needed */
    /* justify-content: space-between; */ /* Optional: pushes elements apart vertically */
}

.model-title {
	font-size: 2.2rem;
	font-weight: 700;
	margin-bottom: 0.5rem;
	color: var(--dark);
}

.company-badge {
	display: inline-block;
	padding: 0.2rem 0.6rem;
	/* background-color: var(--info); */
	border-radius: var(--border-radius-sm);
	font-size: 0.8rem;
	margin-bottom: 1rem;
	font-weight: 500;
	color: var(--text-muted);
}

.tech-specs-table {
	width: 100%;
	border-collapse: collapse;
	margin-top: 1rem;
	table-layout: fixed;
}

.tech-specs-table td {
	padding: 0.6rem 0.5rem;
	border-bottom: 1px solid var(--border-color);
	font-size: 0.9rem;
    vertical-align: top; /* Ensure content aligns top */
	word-wrap: break-word;
}

.tech-specs-table tr:last-child td {
	border-bottom: none;
}

.tech-specs-table td:first-child {
	color: var(--text-muted);
	width: 35%;
	font-weight: 500;
	padding-right: 1rem;
}

.tech-specs-table td:last-child {
	font-weight: 600;
	color: var(--dark);
	text-align: left;
	width: 65%;
}

.tech-specs-table ul {
	list-style: none;
	padding-left: 0;
	margin: 0;
}

.tech-specs-table ul li {
	margin-bottom: 0.25rem;
}

/* Add this style for the sub-detail inside the table */
.tech-specs-table .sub-detail {
    display: block;
    font-size: 0.8rem; /* Slightly smaller */
    color: var(--text-muted);
    font-weight: 400; /* Lighter weight */
    margin-top: 0.2rem;
}


.loader {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: var(--white);
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 1000;
	transition: opacity 0.5s ease, visibility 0.5s ease;
}

.loader.hidden {
	opacity: 0;
	visibility: hidden;
}

.spinner {
	width: 45px;
	height: 45px;
	border: 5px solid rgba(0, 0, 0, 0.1);
	border-radius: 50%;
	border-top-color: var(--primary);
	animation: spin 1s linear infinite;
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

.empty-state {
    grid-column: 1 / -1; /* Make sure it spans all columns */
	padding: 5rem 2rem;
	text-align: center;
	background: var(--white);
	border-radius: var(--border-radius-lg);
	box-shadow: var(--shadow-md);
	border: 1px solid var(--border-color);
	margin: 2rem 1.5rem;
    display: none; /* Initially hidden */
    /* Add flex properties for centering icon/text */
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.empty-state i {
	font-size: 3.5rem;
	color: var(--primary);
	margin-bottom: 1.5rem;
}

.empty-state h2 {
	font-size: 1.8rem;
	color: var(--dark);
	margin-bottom: 1rem;
	font-weight: 600;
}

.empty-state p {
	max-width: 550px;
	margin: 0 auto;
	color: var(--text-muted);
}

#links-container {
    margin-top: 1rem; /* Add some space above the links */
}

a.resource-link {
	color: var(--primary);
	text-decoration: none;
	font-weight: 500;
	transition: color 0.2s ease;
    display: flex; /* Use flex for icon alignment */
    align-items: center; /* Align icon vertically */
    margin-bottom: 0.6rem; /* Slightly more space */
	word-break: break-all;
}

a.resource-link:hover {
	color: #0056b3;
	text-decoration: underline;
}

a.resource-link i {
    margin-right: 0.6rem; /* More space after icon */
	color: var(--text-muted);
    width: 1.1em; /* Give icon a consistent width */
    text-align: center; /* Center icon if needed */
}

@media screen and (max-width: 992px) {
	.grid-item.hero {
        grid-column: span 2; /* Keep span 2 for tablets if desired */
		flex-direction: column;
		text-align: center;
        /* Adjust padding/min-height for tablet */
        min-height: auto;
	}
	.hero .content {
		padding-right: 0;
		margin-bottom: 1.5rem;
		text-align: center;
        align-items: center; /* Center content horizontally */
	}
	.hero .model-image-container {
		width: 60%;
		max-width: 250px;
        height: auto; /* Adjust height automatically */
        margin-top: 1rem; /* Add space between text and image */
	}
}

@media screen and (max-width: 768px) {
	.grid-item.hero {
        grid-column: span 1; /* Span 1 column on smaller screens */
		min-height: auto;
		padding: 1.5rem;
	}

	.detail-value {
		font-size: 1.9rem;
	}

	.model-title {
		font-size: 1.8rem;
	}

	.hero .model-image-container {
        width: 50%; /* Adjust size */
		max-width: 200px;
	}

	.grid-container {
        grid-template-columns: 1fr; /* Single column layout */
        gap: 1rem;
        padding: 1.5rem 1rem;
        /* align-items: start; already set */
	}
	.search-box button span {
		display: none;
	}
	.search-box button {
		padding: 0 1.5rem;
	}
	.search-box button i {
		margin-right: 0;
	}
	.tech-specs-table td:first-child {
		width: 40%;
	}
	.tech-specs-table td:last-child {
		width: 60%;
	}
}

/* Ensure list items inside cards have consistent styling */
.details-list {
    list-style: disc; /* Or none, or other type */
    padding-left: 1.2rem; /* Indentation */
    margin-top: 0.5rem;
    margin-bottom: 0; /* Reset default ul margin */
}

.details-list li {
    margin-bottom: 0.4rem; /* Space between list items */
    font-size: 0.9rem; /* Match text size */
    color: var(--dark); /* Ensure consistent text color */
    line-height: 1.5;
}